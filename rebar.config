%%  {erl_opts, [native, {hipe, [verbose]}, debug_info]}. 
%%  {erl_opts, [no_debug_info]}. 
  {erl_opts, [debug_info]}.

%%  {ok, {_, [{abstract_code, {_, Ac}}]}} = beam_lib:chunks(code:which(a), [abstract_code]). 
%%  io:fwrite("~s~n", [erl_prettypr:format(erl_syntax:form_list(Ac))]). 
%%  vim ~/.erlang.crypt 
%%  [{debug_info, des3_cbc, [], "12345"}]. 

%%  ~/.erlang.crypt not needed on compiling, only neened on debugging 
%%  {erl_opts, [debug_info,{debug_info_key,{des3_cbc,"12345"}}]}. 

%%  ~/.erlang.crypt needed on compiling
%%{erl_opts, [encrypt_debug_info]}.

{deps, [
  {useful_tools, ".*", {git, "https://github.com/ziyouchutuwenwu/useful_tools", {branch, "master"}}}
%%  {sync, ".*", {git, "https://github.com/rustyio/sync", {branch, "master"}}} 
%%  {cowboy, ".*",{git, "https://github.com/ninenines/cowboy.git", {branch, "master"}}},
%%  {cowboy, "1.0.4",{git, "https://github.com/ninenines/cowboy.git", {tag, "1.0.4"}}}
]}.


{relx,
  [
    {release, {tcp_server, "0.1.0"},
         [tcp_server, sasl]
    },

        {mode, dev},

        {sys_config, "./config/sys.config"},
        {vm_args, "./config/vm.args"}

        %% the .src form of the configuration files do
        %% not require setting RELX_REPLACE_OS_VARS
        %% {sys_config_src, "./config/sys.config.src"},
        %% {vm_args_src, "./config/vm.args.src"}
]}.

{profiles, [{prod, [{relx,
                     [%% prod is the default mode when prod
                      %% profile is used, so does not have
                      %% to be explicitly included like this
                      {mode, prod}

                      %% use minimal mode to exclude ERTS
                      %% {mode, minimal}
                     ]
            }]}]}.

{pre_hooks, [ 
  {clean, "rm -rf ./_build/test"}
]}.
{provider_hooks, [{pre, [{clean}]}]}.
{shell, [{script_file, "on_app_start.erl"}]}.

{cover_enabled, true}.
{eunit_opts, [
    verbose, {
        report,{
            eunit_surefire,[
                {dir,"./_build/test"}
            ]
        }
    }
]}.
